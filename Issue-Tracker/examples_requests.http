### Example post into Users
POST http://localhost:8080/users
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{"username": "Andrejo", "password":  "heslo"}


### Get all Users

GET http://localhost:8080/users
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### Successfull user getByID

GET http://localhost:8080/users/1
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### getByID for non-existing user

GET http://localhost:8080/users/2000
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### Put - change Andrej password to 1234

PUT http://localhost:8080/users/152
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{"username" : "Andrej", "password" :  "1234"}

### Put for nonExisting user

PUT http://localhost:8080/users/100
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{"username" : "Andrej", "password" :  "1234"}

### Delete for existing user

DELETE http://localhost:8080/users/404
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### Delete for non existing user

DELETE http://localhost:8080/users/10000
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### End of testing userController --------------------------------------------------------------------------------------





### Post directly into Project not allowed -> All projects must belong to User

POST http://localhost:8080/projects
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{"name":  "TJV Semester work", "contributorsIds" : [1], "description" :  "The best project ever made"}


### adding project to the user

POST http://localhost:8080/users/404/projects
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{"name":  "Honzovo projekt",  "description" :  "Even more of pure pain"}


### get all projects

GET http://localhost:8080/projects
Accept: */*
Cache-Control: no-cache
Content-Type: application/json


### get project by id existing

GET http://localhost:8080/projects/1
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### get project by id non-existing

GET http://localhost:8080/projects/10000
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### Get on users projects

GET http://localhost:8080/users/1/projects
Accept: */*
Cache-Control: no-cache
Content-Type: application/json


### Get on non-existing user/projects

GET http://localhost:8080/users/100/projects
Accept: */*
Cache-Control: no-cache
Content-Type: application/json


### put on existing project

PUT http://localhost:8080/projects/102
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{"name":  "PA2 Semestral work", "contributorsIds" : [1], "description" :  "Even more of pure pain"}

### put on non-existing project // todo fix exception

PUT http://localhost:8080/projects/1
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{"name":  "PA2 Semestral work", "contributorsIds" : [1,2,3,4], "description" :  "Even more of pure pain"}


### delete on exisitng project
DELETE http://localhost:8080/projects/102
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### delete on non-exisitng project // todo fix exception
DELETE http://localhost:8080/projects/100
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### end of testing projectController -----------------------------------------------------------------------------------

### POST -> Post directly into Task not allow, must be under some project

POST http://localhost:8080/tasks
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{
  "taskName": "Dokoncit fit",
  "description": "Krasny ukol, zcela nemozny",
  "creationDate": "2023-11-11T14:30:00.000Z",
  "dueDate": "2023-12-01T18:00:00.000Z",
  "status": "IN_PROGRESS"
}



### get tasks

GET http://localhost:8080/tasks
Accept: */*
Cache-Control: no-cache
Content-Type: application/json


### get existing task

GET http://localhost:8080/tasks/10000
Accept: */*
Cache-Control: no-cache
Content-Type: application/json


### get non-existing task

GET http://localhost:8080/tasks/100
Accept: */*
Cache-Control: no-cache
Content-Type: application/json


### adding tasks to some project

POST http://localhost:8080/projects/1/tasks
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{
  "taskName": "TJV CLIENT APP",
  "description": "krasny ukol, zcela mozny",
  "creationDate": "2023-11-11T14:30:00.000Z",
  "dueDate": "2023-12-01T18:00:00.000Z",
  "status": "IN_PROGRESS"
}


### put on existing task

PUT http://localhost:8080/tasks/103
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{
  "taskName": "Dokoncit fit",
  "description": "Nekrasny ukol, zcela nemozny",
  "creationDate": "2023-11-11T14:30:00.000Z",
  "dueDate": "2023-12-01T18:00:00.000Z",
  "status": "TODO"
}

### deleting this task

DELETE http://localhost:8080/tasks/103
Accept: */*
Cache-Control: no-cache
Content-Type: application/json


### put on non-existing task

PUT http://localhost:8080/tasks/100
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{
  "taskName": "Dokoncit fit",
  "description": "Nekrasny ukol, zcela nemozny",
  "creationDate": "2023-11-11T14:30:00.000Z",
  "dueDate": "2023-12-01T18:00:00.000Z",
  "status": "TODO"
}

### delete on non-exisitng task

DELETE http://localhost:8080/tasks/10000
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

### Authorization post

POST http://localhost:8080/authenticateuser
Accept: */*
Cache-Control: no-cache
Content-Type: application/json

{
  "username" : "www",
  "password" : "karel"
}

### Get - task from project

GET http://localhost:8080/projects/1/tasks
Accept: */*
Cache-Control: no-cache
Content-Type: application/json


### Get unfinished tasks

GET http://localhost:8080/users/1/unfinishedTasks
Accept: */*
Cache-Control: no-cache
Content-Type: application/json
